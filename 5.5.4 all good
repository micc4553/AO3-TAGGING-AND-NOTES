function createSettingsPanel() {
    const panel = document.createElement('div');
    panel.innerHTML = `
  <div style="position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);background:#232136CC;color:#fff;border:2px solid #ddd;border-radius:8px;padding:20px;z-index:100000;max-width:500px;box-shadow:0 4px 20px rgba(0,0,0,0.3);">
    <h3 style="margin-top:0;color:#fff;">AO3 Tagging & Sync Settings</h3>
    
    <!-- Cleanup Tools Section -->
    <div style="margin:15px 0;">
      <h4 style="margin:0 0 8px 0;color:#fff;font-size:1em;">Storage Cleanup</h4>
      <div style="display:flex;gap:8px;flex-wrap:wrap;">
        <button id="cleanup-storage" style="flex:1;min-width:140px;padding:8px 12px;background:#ff9800;color:white;border:none;border-radius:4px;cursor:pointer;font-size:0.9em;">Clean Up Storage</button>
        <button id="deep-cleanup-storage" style="flex:1;min-width:140px;padding:8px 12px;background:#f44336;color:white;border:none;border-radius:4px;cursor:pointer;font-size:0.9em;">Deep Clean</button>
        <button id="clear-deletion-history" style="flex:1;min-width:140px;padding:8px 12px;background:#9c27b0;color:white;border:none;border-radius:4px;cursor:pointer;font-size:0.9em;">Clear History</button>
      </div>
    </div>

    <!-- Sync Settings Section -->
    <div style="margin:15px 0;">
      <h4 style="margin:0 0 8px 0;color:#fff;font-size:1em;">Google Sync</h4>
      <div style="margin:8px 0;">
        <label style="color:#fff;display:flex;align-items:center;gap:8px;">
          <input type="checkbox" id="sync-enabled" ${settings.enabled ? 'checked' : ''}>
          Enable Google Sync
        </label>
      </div>
      <div style="margin:8px 0;">
        <label style="display:block;margin-bottom:5px;color:#fff;font-size:0.9em;">Apps Script URL:</label>
        <input type="text" id="sheet-url" value="${settings.sheetUrl || ''}" style="width:100%;padding:6px;box-sizing:border-box;border:1px solid #ccc;border-radius:4px;" placeholder="https://script.google.com/macros/s/.../exec">
      </div>
      <div style="margin:8px 0;">
        <label style="display:block;margin-bottom:5px;color:#fff;font-size:0.9em;">Sync Interval (seconds):</label>
        <input type="number" id="sync-interval" value="${settings.syncInterval || 60}" min="30" max="3600" style="width:100px;padding:6px;box-sizing:border-box;border:1px solid #ccc;border-radius:4px;">
      </div>
      <div style="margin:8px 0;">
        <label style="color:#fff;display:flex;align-items:center;gap:8px;">
          <input type="checkbox" id="show-widget" ${settings.showWidget !== false ? 'checked' : ''}>
          Show sync widget
        </label>
      </div>
    </div>

    <!-- Action Buttons -->
    <div style="margin-top:20px;display:flex;gap:10px;width:100%;">
      <button id="save-sync-settings" style="padding:8px 16px;background:#4CAF50;color:white;border:none;border-radius:4px;cursor:pointer;white-space:nowrap;flex-grow:1;">Save Settings</button>
      <button id="init-sync-storage" style="padding:8px 16px;background:#2196F3;color:white;border:none;border-radius:4px;cursor:pointer;white-space:nowrap;flex-grow:1;">Initialize Storage</button>
      <button id="close-settings" style="padding:8px 16px;background:#666;color:white;border:none;border-radius:4px;cursor:pointer;white-space:nowrap;flex-grow:1;">Close</button>
    </div>
  </div>
  <div style="position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.5);z-index:99999;"></div>
    `;

    document.body.appendChild(panel);

    // Cleanup buttons event listeners
    panel.querySelector('#cleanup-storage')?.addEventListener('click', () => {
      const result = cleanupInvalidEntries();
      alert(`Cleanup complete!\nRemoved: ${result.removedLabels} labels, ${result.removedNotes} notes\nKept: ${result.keptLabels} labels, ${result.keptNotes} notes`);
    });

    panel.querySelector('#deep-cleanup-storage')?.addEventListener('click', async () => {
      if (!confirm('This will validate each work against AO3. This may take several minutes. Continue?')) {
        return;
      }
      const result = await deepCleanupWithValidation();
      alert(`Deep cleanup complete!\nValidated: ${result.validated} works\nRemoved: ${result.removed} invalid works`);
    });

    panel.querySelector('#clear-deletion-history')?.addEventListener('click', () => {
      const deletedLabels = loadDeletedLabels();
      const deletedNotes = loadDeletedNotes();
      const deletedAuthorNotes = loadDeletedAuthorNotes();

      const totalDeleted = Object.keys(deletedLabels).length + Object.keys(deletedNotes).length + Object.keys(deletedAuthorNotes).length;

      if (totalDeleted === 0) {
        alert('No deletion history to clear.');
        return;
      }

      if (!confirm(`Clear deletion history for ${totalDeleted} items? This will allow previously deleted items to potentially sync back from other devices.`)) {
        return;
      }

      localStorage.removeItem(DELETED_LABELS_KEY);
      localStorage.removeItem(DELETED_NOTES_KEY);
      localStorage.removeItem(DELETED_AUTHOR_NOTES_KEY);

      alert(`Cleared deletion history for ${totalDeleted} items.`);
    });

    // Settings event listeners
    panel.querySelector('#save-sync-settings').addEventListener('click', () => {
      const newSettings = {
        ...settings,
        enabled: panel.querySelector('#sync-enabled').checked,
        sheetUrl: panel.querySelector('#sheet-url').value,
        syncInterval: parseInt(panel.querySelector('#sync-interval').value),
        showWidget: panel.querySelector('#show-widget').checked
      };
      saveSyncSettings(newSettings);
      alert('Settings saved! Please reload the page for changes to take effect.');
      panel.remove();
    });

    panel.querySelector('#init-sync-storage').addEventListener('click', async () => {
      if (!syncManager) {
        syncManager = new GoogleSheetsSync();
      }
      await syncManager.initializeStorage();
    });

    panel.querySelector('#close-settings').addEventListener('click', () => {
      panel.remove();
    });

    panel.addEventListener('click', (e) => {
      if (e.target === panel || e.target.style.background === 'rgba(0, 0, 0, 0.5)') {
        panel.remove();
      }
    });
}
